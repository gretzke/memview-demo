# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tests

on:
  push:
    branches: [main, dev, feature/**, combine-prs-branch]
  pull_request:
    branches: [main, dev, feature/**, combine-prs-branch]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Get node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run compile
      - run: TS_NODE_TRANSPILE_ONLY=1 npm test

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Get node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run compile
      - run: npm run coverage
      - name: coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  forge_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install Node modules
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'npm'
      - run: npm ci
      - name: Run tests
        run: forge test

  solhint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npx solhint "contracts/**/*.sol"

  slither:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Slither
        uses: crytic/slither-action@v0.2.0
        id: slither
        with:
          node-version: 16
          sarif: results.sarif
          fail-on: none

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}
